name: 'Movies and Shows Routes'
description: |-

  APIs for getting movies and shows' datas.
endpoints:
  -
    httpMethods:
      - GET
    uri: api/movies
    metadata:
      groupName: 'Movies and Shows Routes'
      groupDescription: |-

        APIs for getting movies and shows' datas.
      subgroup: ''
      subgroupDescription: ''
      title: 'Get All Movies'
      description: 'This endpoint lets you get all movies in batches of 10.'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters:
      page:
        name: page
        description: 'Page you wanna get, Defaults to 1.'
        required: false
        example: 18
        type: integer
        custom: []
    cleanQueryParameters:
      page: 18
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 64vgdaa5PhDV3e1kf6EZb8c'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/tv-series
    metadata:
      groupName: 'Movies and Shows Routes'
      groupDescription: |-

        APIs for getting movies and shows' datas.
      subgroup: ''
      subgroupDescription: ''
      title: 'Get All Tv Series'
      description: 'This endpoint lets you get all tv series in batches of 10.'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters:
      page:
        name: page
        description: 'Page you wanna get, Defaults to 1.'
        required: false
        example: 5
        type: integer
        custom: []
    cleanQueryParameters:
      page: 5
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer c463eZ18E56bdfaghkDVvPa'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/popular-movies
    metadata:
      groupName: 'Movies and Shows Routes'
      groupDescription: |-

        APIs for getting movies and shows' datas.
      subgroup: ''
      subgroupDescription: ''
      title: 'Get Popular Movies'
      description: 'This endpoint lets you get top 5 rated movies.'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer fgePEDbhc68Z4V5a13akd6v'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/popular-tv-series
    metadata:
      groupName: 'Movies and Shows Routes'
      groupDescription: |-

        APIs for getting movies and shows' datas.
      subgroup: ''
      subgroupDescription: ''
      title: 'Get Popular Tv Series'
      description: 'This endpoint lets you get top 5 rated tv series.'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer V8aDh6fkb6c45Z31PagdEev'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/movies/{id}'
    metadata:
      groupName: 'Movies and Shows Routes'
      groupDescription: |-

        APIs for getting movies and shows' datas.
      subgroup: ''
      subgroupDescription: ''
      title: 'Get a Movie'
      description: 'This endpoint lets you get a movie by it''s id.'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the movie.'
        required: true
        example: dolorem
        type: string
        custom: []
    cleanUrlParameters:
      id: dolorem
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer P6bf1aEvkZDd5eV8hgc436a'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/tv-series/{id}'
    metadata:
      groupName: 'Movies and Shows Routes'
      groupDescription: |-

        APIs for getting movies and shows' datas.
      subgroup: ''
      subgroupDescription: ''
      title: 'Get a Tv Serie'
      description: 'This endpoint lets you get a tv serie by it''s id.'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the tv series.'
        required: true
        example: quidem
        type: string
        custom: []
    cleanUrlParameters:
      id: quidem
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 8V1aEaPehc665k4gdbZvfD3'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/movies/search/{query}'
    metadata:
      groupName: 'Movies and Shows Routes'
      groupDescription: |-

        APIs for getting movies and shows' datas.
      subgroup: ''
      subgroupDescription: ''
      title: 'Search a Movie'
      description: 'This endpoint lets you search a movie.'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      query:
        name: query
        description: ''
        required: true
        example: a
        type: string
        custom: []
    cleanUrlParameters:
      query: a
    queryParameters:
      page:
        name: page
        description: 'Page you wanna get, Defaults to 1.'
        required: false
        example: 4
        type: integer
        custom: []
    cleanQueryParameters:
      page: 4
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer b4kf36hgEV8v6P1dcDeaa5Z'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/tv-series/search/{query}'
    metadata:
      groupName: 'Movies and Shows Routes'
      groupDescription: |-

        APIs for getting movies and shows' datas.
      subgroup: ''
      subgroupDescription: ''
      title: 'Search a Tv Serie'
      description: 'This endpoint lets you search a tv serie.'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      query:
        name: query
        description: ''
        required: true
        example: iure
        type: string
        custom: []
    cleanUrlParameters:
      query: iure
    queryParameters:
      page:
        name: page
        description: 'Page you wanna get, Defaults to 1.'
        required: false
        example: 20
        type: integer
        custom: []
    cleanQueryParameters:
      page: 20
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer h6f5vePDV1ga64d3cZkb8Ea'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/movies/{id}/trailer'
    metadata:
      groupName: 'Movies and Shows Routes'
      groupDescription: |-

        APIs for getting movies and shows' datas.
      subgroup: ''
      subgroupDescription: ''
      title: 'Get a Movie trailer'
      description: 'This endpoint lets you get a movie''s trailer by its Id.'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the movie.'
        required: true
        example: possimus
        type: string
        custom: []
    cleanUrlParameters:
      id: possimus
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 8ak4b6v6cD1h3daEePfZ5gV'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/tv-series/{id}/trailer'
    metadata:
      groupName: 'Movies and Shows Routes'
      groupDescription: |-

        APIs for getting movies and shows' datas.
      subgroup: ''
      subgroupDescription: ''
      title: 'Get a Tv Serie trailer'
      description: 'This endpoint lets you get a tv serie''s trailer by its Id.'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the tv series.'
        required: true
        example: sed
        type: string
        custom: []
    cleanUrlParameters:
      id: sed
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer aPch586Zafv416bEedDgVk3'
    controller: null
    method: null
    route: null
    custom: []
